#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HealthCare.Models
{
    using System.Data.Linq;
    using System.Data.Linq.Mapping;
    using System.Data;
    using System.Collections.Generic;
    using System.Reflection;
    using System.Linq;
    using System.Linq.Expressions;
    using System.ComponentModel;
    using System;
    using System.ComponentModel.DataAnnotations;

    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MiBBDD")]
	public partial class MiDBContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertClientes(Clientes instance);
    partial void UpdateClientes(Clientes instance);
    partial void DeleteClientes(Clientes instance);
    partial void InsertDirecciones(Direcciones instance);
    partial void UpdateDirecciones(Direcciones instance);
    partial void DeleteDirecciones(Direcciones instance);
    partial void InsertEmpleados(Empleados instance);
    partial void UpdateEmpleados(Empleados instance);
    partial void DeleteEmpleados(Empleados instance);
    partial void InsertEmpresas(Empresas instance);
    partial void UpdateEmpresas(Empresas instance);
    partial void DeleteEmpresas(Empresas instance);
    partial void InsertItems(Items instance);
    partial void UpdateItems(Items instance);
    partial void DeleteItems(Items instance);
    partial void InsertPrescripciones(Prescripciones instance);
    partial void UpdatePrescripciones(Prescripciones instance);
    partial void DeletePrescripciones(Prescripciones instance);
    #endregion
		
		public MiDBContextDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MiBBDDConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MiDBContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MiDBContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MiDBContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MiDBContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Clientes> Clientes
		{
			get
			{
				return this.GetTable<Clientes>();
			}
		}
		
		public System.Data.Linq.Table<Direcciones> Direcciones
		{
			get
			{
				return this.GetTable<Direcciones>();
			}
		}
		
		public System.Data.Linq.Table<Empleados> Empleados
		{
			get
			{
				return this.GetTable<Empleados>();
			}
		}
		
		public System.Data.Linq.Table<Empresas> Empresas
		{
			get
			{
				return this.GetTable<Empresas>();
			}
		}
		
		public System.Data.Linq.Table<Items> Items
		{
			get
			{
				return this.GetTable<Items>();
			}
		}
		
		public System.Data.Linq.Table<Prescripciones> Prescripciones
		{
			get
			{
				return this.GetTable<Prescripciones>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clientes")]
	public partial class Clientes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SS;
		
		private string _Nombre;
		
		private string _Apellidos;
		
		private int _Telefono;
		
		private int _Edad;
		
		private string _Email;
		
		private EntityRef<Direcciones> _Direcciones;
		
		private EntitySet<Prescripciones> _Prescripciones;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSSChanging(int value);
    partial void OnSSChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidosChanging(string value);
    partial void OnApellidosChanged();
    partial void OnTelefonoChanging(int value);
    partial void OnTelefonoChanged();
    partial void OnEdadChanging(int value);
    partial void OnEdadChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Clientes()
		{
			this._Direcciones = default(EntityRef<Direcciones>);
			this._Prescripciones = new EntitySet<Prescripciones>(new Action<Prescripciones>(this.attach_Prescripciones), new Action<Prescripciones>(this.detach_Prescripciones));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SS", DbType="Int NOT NULL", IsPrimaryKey=true)]
        [Required(ErrorMessage = "No se puede dejar esta campo vacio")]
		public int SS
		{
			get
			{
				return this._SS;
			}
			set
			{
				if ((this._SS != value))
				{
					this.OnSSChanging(value);
					this.SendPropertyChanging();
					this._SS = value;
					this.SendPropertyChanged("SS");
					this.OnSSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellidos", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Apellidos
		{
			get
			{
				return this._Apellidos;
			}
			set
			{
				if ((this._Apellidos != value))
				{
					this.OnApellidosChanging(value);
					this.SendPropertyChanging();
					this._Apellidos = value;
					this.SendPropertyChanged("Apellidos");
					this.OnApellidosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="Int NOT NULL")]
		public int Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edad", DbType="Int NOT NULL")]
		public int Edad
		{
			get
			{
				return this._Edad;
			}
			set
			{
				if ((this._Edad != value))
				{
					this.OnEdadChanging(value);
					this.SendPropertyChanging();
					this._Edad = value;
					this.SendPropertyChanged("Edad");
					this.OnEdadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clientes_Direcciones", Storage="_Direcciones", ThisKey="SS", OtherKey="IDDueño", IsUnique=true, IsForeignKey=false)]
		public Direcciones Direcciones
		{
			get
			{
				return this._Direcciones.Entity;
			}
			set
			{
				Direcciones previousValue = this._Direcciones.Entity;
				if (((previousValue != value) 
							|| (this._Direcciones.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Direcciones.Entity = null;
						previousValue.Clientes = null;
					}
					this._Direcciones.Entity = value;
					if ((value != null))
					{
						value.Clientes = this;
					}
					this.SendPropertyChanged("Direcciones");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clientes_Prescripciones", Storage="_Prescripciones", ThisKey="SS", OtherKey="IDCliente")]
		public EntitySet<Prescripciones> Prescripciones
		{
			get
			{
				return this._Prescripciones;
			}
			set
			{
				this._Prescripciones.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Prescripciones(Prescripciones entity)
		{
			this.SendPropertyChanging();
			entity.Clientes = this;
		}
		
		private void detach_Prescripciones(Prescripciones entity)
		{
			this.SendPropertyChanging();
			entity.Clientes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Direcciones")]
	public partial class Direcciones : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDDueño;
		
		private string _Calle;
		
		private int _Numero;
		
		private string _Puerta;
		
		private int _Codigo_Postal;
		
		private string _Detalles;
		
		private System.Nullable<int> _Portal;
		
		private System.Nullable<int> _Piso;
		
		private EntityRef<Empresas> _Empresas;
		
		private EntityRef<Clientes> _Clientes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDDueñoChanging(int value);
    partial void OnIDDueñoChanged();
    partial void OnCalleChanging(string value);
    partial void OnCalleChanged();
    partial void OnNumeroChanging(int value);
    partial void OnNumeroChanged();
    partial void OnPuertaChanging(string value);
    partial void OnPuertaChanged();
    partial void OnCodigo_PostalChanging(int value);
    partial void OnCodigo_PostalChanged();
    partial void OnDetallesChanging(string value);
    partial void OnDetallesChanged();
    partial void OnPortalChanging(System.Nullable<int> value);
    partial void OnPortalChanged();
    partial void OnPisoChanging(System.Nullable<int> value);
    partial void OnPisoChanged();
    #endregion
		
		public Direcciones()
		{
			this._Empresas = default(EntityRef<Empresas>);
			this._Clientes = default(EntityRef<Clientes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDueño", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDDueño
		{
			get
			{
				return this._IDDueño;
			}
			set
			{
				if ((this._IDDueño != value))
				{
					if ((this._Empresas.HasLoadedOrAssignedValue || this._Clientes.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDueñoChanging(value);
					this.SendPropertyChanging();
					this._IDDueño = value;
					this.SendPropertyChanged("IDDueño");
					this.OnIDDueñoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Calle", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Calle
		{
			get
			{
				return this._Calle;
			}
			set
			{
				if ((this._Calle != value))
				{
					this.OnCalleChanging(value);
					this.SendPropertyChanging();
					this._Calle = value;
					this.SendPropertyChanged("Calle");
					this.OnCalleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero", DbType="Int NOT NULL")]
		public int Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Puerta", DbType="NChar(10)")]
		public string Puerta
		{
			get
			{
				return this._Puerta;
			}
			set
			{
				if ((this._Puerta != value))
				{
					this.OnPuertaChanging(value);
					this.SendPropertyChanging();
					this._Puerta = value;
					this.SendPropertyChanged("Puerta");
					this.OnPuertaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Codigo Postal]", Storage="_Codigo_Postal", DbType="Int NOT NULL")]
		public int Codigo_Postal
		{
			get
			{
				return this._Codigo_Postal;
			}
			set
			{
				if ((this._Codigo_Postal != value))
				{
					this.OnCodigo_PostalChanging(value);
					this.SendPropertyChanging();
					this._Codigo_Postal = value;
					this.SendPropertyChanged("Codigo_Postal");
					this.OnCodigo_PostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detalles", DbType="NVarChar(MAX)")]
		public string Detalles
		{
			get
			{
				return this._Detalles;
			}
			set
			{
				if ((this._Detalles != value))
				{
					this.OnDetallesChanging(value);
					this.SendPropertyChanging();
					this._Detalles = value;
					this.SendPropertyChanged("Detalles");
					this.OnDetallesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Portal", DbType="Int")]
		public System.Nullable<int> Portal
		{
			get
			{
				return this._Portal;
			}
			set
			{
				if ((this._Portal != value))
				{
					this.OnPortalChanging(value);
					this.SendPropertyChanging();
					this._Portal = value;
					this.SendPropertyChanged("Portal");
					this.OnPortalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Piso", DbType="Int")]
		public System.Nullable<int> Piso
		{
			get
			{
				return this._Piso;
			}
			set
			{
				if ((this._Piso != value))
				{
					this.OnPisoChanging(value);
					this.SendPropertyChanging();
					this._Piso = value;
					this.SendPropertyChanged("Piso");
					this.OnPisoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Direcciones", Storage="_Empresas", ThisKey="IDDueño", OtherKey="IDEmpresa", IsForeignKey=true)]
		public Empresas Empresas
		{
			get
			{
				return this._Empresas.Entity;
			}
			set
			{
				Empresas previousValue = this._Empresas.Entity;
				if (((previousValue != value) 
							|| (this._Empresas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empresas.Entity = null;
						previousValue.Direcciones = null;
					}
					this._Empresas.Entity = value;
					if ((value != null))
					{
						value.Direcciones = this;
						this._IDDueño = value.IDEmpresa;
					}
					else
					{
						this._IDDueño = default(int);
					}
					this.SendPropertyChanged("Empresas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clientes_Direcciones", Storage="_Clientes", ThisKey="IDDueño", OtherKey="SS", IsForeignKey=true)]
		public Clientes Clientes
		{
			get
			{
				return this._Clientes.Entity;
			}
			set
			{
				Clientes previousValue = this._Clientes.Entity;
				if (((previousValue != value) 
							|| (this._Clientes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clientes.Entity = null;
						previousValue.Direcciones = null;
					}
					this._Clientes.Entity = value;
					if ((value != null))
					{
						value.Direcciones = this;
						this._IDDueño = value.SS;
					}
					else
					{
						this._IDDueño = default(int);
					}
					this.SendPropertyChanged("Clientes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Empleados")]
	public partial class Empleados : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDEmpleado;
		
		private string _Nombre;
		
		private string _Profesion;
		
		private int _Valoracion;
		
		private int _IDEmpresa;
		
		private EntityRef<Empresas> _Empresas;
		
		private EntityRef<Prescripciones> _Prescripciones;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDEmpleadoChanging(int value);
    partial void OnIDEmpleadoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnProfesionChanging(string value);
    partial void OnProfesionChanged();
    partial void OnValoracionChanging(int value);
    partial void OnValoracionChanged();
    partial void OnIDEmpresaChanging(int value);
    partial void OnIDEmpresaChanged();
    #endregion
		
		public Empleados()
		{
			this._Empresas = default(EntityRef<Empresas>);
			this._Prescripciones = default(EntityRef<Prescripciones>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEmpleado", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDEmpleado
		{
			get
			{
				return this._IDEmpleado;
			}
			set
			{
				if ((this._IDEmpleado != value))
				{
					if (this._Prescripciones.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDEmpleadoChanging(value);
					this.SendPropertyChanging();
					this._IDEmpleado = value;
					this.SendPropertyChanged("IDEmpleado");
					this.OnIDEmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profesion", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Profesion
		{
			get
			{
				return this._Profesion;
			}
			set
			{
				if ((this._Profesion != value))
				{
					this.OnProfesionChanging(value);
					this.SendPropertyChanging();
					this._Profesion = value;
					this.SendPropertyChanged("Profesion");
					this.OnProfesionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valoracion", DbType="Int NOT NULL")]
		public int Valoracion
		{
			get
			{
				return this._Valoracion;
			}
			set
			{
				if ((this._Valoracion != value))
				{
					this.OnValoracionChanging(value);
					this.SendPropertyChanging();
					this._Valoracion = value;
					this.SendPropertyChanged("Valoracion");
					this.OnValoracionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEmpresa", DbType="Int NOT NULL")]
		public int IDEmpresa
		{
			get
			{
				return this._IDEmpresa;
			}
			set
			{
				if ((this._IDEmpresa != value))
				{
					this.OnIDEmpresaChanging(value);
					this.SendPropertyChanging();
					this._IDEmpresa = value;
					this.SendPropertyChanged("IDEmpresa");
					this.OnIDEmpresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleados_Empresas", Storage="_Empresas", ThisKey="IDEmpresa", OtherKey="IDEmpresa", IsUnique=true, IsForeignKey=false)]
		public Empresas Empresas
		{
			get
			{
				return this._Empresas.Entity;
			}
			set
			{
				Empresas previousValue = this._Empresas.Entity;
				if (((previousValue != value) 
							|| (this._Empresas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empresas.Entity = null;
						previousValue.Empleados = null;
					}
					this._Empresas.Entity = value;
					if ((value != null))
					{
						value.Empleados = this;
					}
					this.SendPropertyChanged("Empresas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prescripciones_Empleados", Storage="_Prescripciones", ThisKey="IDEmpleado", OtherKey="IDEmpleado", IsForeignKey=true)]
		public Prescripciones Prescripciones
		{
			get
			{
				return this._Prescripciones.Entity;
			}
			set
			{
				Prescripciones previousValue = this._Prescripciones.Entity;
				if (((previousValue != value) 
							|| (this._Prescripciones.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prescripciones.Entity = null;
						previousValue.Empleados = null;
					}
					this._Prescripciones.Entity = value;
					if ((value != null))
					{
						value.Empleados = this;
						this._IDEmpleado = value.IDEmpleado;
					}
					else
					{
						this._IDEmpleado = default(int);
					}
					this.SendPropertyChanged("Prescripciones");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Empresas")]
	public partial class Empresas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDEmpresa;
		
		private string _Nombre;
		
		private string _Tipo;
		
		private int _Telefono;
		
		private string _Email;
		
		private EntityRef<Direcciones> _Direcciones;
		
		private EntityRef<Empleados> _Empleados;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDEmpresaChanging(int value);
    partial void OnIDEmpresaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnTipoChanging(string value);
    partial void OnTipoChanged();
    partial void OnTelefonoChanging(int value);
    partial void OnTelefonoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Empresas()
		{
			this._Direcciones = default(EntityRef<Direcciones>);
			this._Empleados = default(EntityRef<Empleados>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEmpresa", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDEmpresa
		{
			get
			{
				return this._IDEmpresa;
			}
			set
			{
				if ((this._IDEmpresa != value))
				{
					if (this._Empleados.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDEmpresaChanging(value);
					this.SendPropertyChanging();
					this._IDEmpresa = value;
					this.SendPropertyChanged("IDEmpresa");
					this.OnIDEmpresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="Int NOT NULL")]
		public int Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Direcciones", Storage="_Direcciones", ThisKey="IDEmpresa", OtherKey="IDDueño", IsUnique=true, IsForeignKey=false)]
		public Direcciones Direcciones
		{
			get
			{
				return this._Direcciones.Entity;
			}
			set
			{
				Direcciones previousValue = this._Direcciones.Entity;
				if (((previousValue != value) 
							|| (this._Direcciones.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Direcciones.Entity = null;
						previousValue.Empresas = null;
					}
					this._Direcciones.Entity = value;
					if ((value != null))
					{
						value.Empresas = this;
					}
					this.SendPropertyChanged("Direcciones");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleados_Empresas", Storage="_Empleados", ThisKey="IDEmpresa", OtherKey="IDEmpresa", IsForeignKey=true)]
		public Empleados Empleados
		{
			get
			{
				return this._Empleados.Entity;
			}
			set
			{
				Empleados previousValue = this._Empleados.Entity;
				if (((previousValue != value) 
							|| (this._Empleados.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empleados.Entity = null;
						previousValue.Empresas = null;
					}
					this._Empleados.Entity = value;
					if ((value != null))
					{
						value.Empresas = this;
						this._IDEmpresa = value.IDEmpresa;
					}
					else
					{
						this._IDEmpresa = default(int);
					}
					this.SendPropertyChanged("Empleados");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Items")]
	public partial class Items : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDItem;
		
		private int _IDPrescripcion;
		
		private string _Nombre;
		
		private string _Tipo;
		
		private string _Detalles;
		
		private EntityRef<Prescripciones> _Prescripciones;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDItemChanging(int value);
    partial void OnIDItemChanged();
    partial void OnIDPrescripcionChanging(int value);
    partial void OnIDPrescripcionChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnTipoChanging(string value);
    partial void OnTipoChanged();
    partial void OnDetallesChanging(string value);
    partial void OnDetallesChanged();
    #endregion
		
		public Items()
		{
			this._Prescripciones = default(EntityRef<Prescripciones>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDItem", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDItem
		{
			get
			{
				return this._IDItem;
			}
			set
			{
				if ((this._IDItem != value))
				{
					this.OnIDItemChanging(value);
					this.SendPropertyChanging();
					this._IDItem = value;
					this.SendPropertyChanged("IDItem");
					this.OnIDItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPrescripcion", DbType="Int NOT NULL")]
		public int IDPrescripcion
		{
			get
			{
				return this._IDPrescripcion;
			}
			set
			{
				if ((this._IDPrescripcion != value))
				{
					if (this._Prescripciones.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPrescripcionChanging(value);
					this.SendPropertyChanging();
					this._IDPrescripcion = value;
					this.SendPropertyChanged("IDPrescripcion");
					this.OnIDPrescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detalles", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Detalles
		{
			get
			{
				return this._Detalles;
			}
			set
			{
				if ((this._Detalles != value))
				{
					this.OnDetallesChanging(value);
					this.SendPropertyChanging();
					this._Detalles = value;
					this.SendPropertyChanged("Detalles");
					this.OnDetallesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prescripciones_Items", Storage="_Prescripciones", ThisKey="IDPrescripcion", OtherKey="IDPrescripcion", IsForeignKey=true)]
		public Prescripciones Prescripciones
		{
			get
			{
				return this._Prescripciones.Entity;
			}
			set
			{
				Prescripciones previousValue = this._Prescripciones.Entity;
				if (((previousValue != value) 
							|| (this._Prescripciones.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prescripciones.Entity = null;
						previousValue.Items.Remove(this);
					}
					this._Prescripciones.Entity = value;
					if ((value != null))
					{
						value.Items.Add(this);
						this._IDPrescripcion = value.IDPrescripcion;
					}
					else
					{
						this._IDPrescripcion = default(int);
					}
					this.SendPropertyChanged("Prescripciones");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prescripciones")]
	public partial class Prescripciones : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPrescripcion;
		
		private int _IDCliente;
		
		private int _IDEmpleado;
		
		private string _Seguro;
		
		private int _Estado;
		
		private EntityRef<Empleados> _Empleados;
		
		private EntitySet<Items> _Items;
		
		private EntityRef<Clientes> _Clientes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPrescripcionChanging(int value);
    partial void OnIDPrescripcionChanged();
    partial void OnIDClienteChanging(int value);
    partial void OnIDClienteChanged();
    partial void OnIDEmpleadoChanging(int value);
    partial void OnIDEmpleadoChanged();
    partial void OnSeguroChanging(string value);
    partial void OnSeguroChanged();
    partial void OnEstadoChanging(int value);
    partial void OnEstadoChanged();
    #endregion
		
		public Prescripciones()
		{
			this._Empleados = default(EntityRef<Empleados>);
			this._Items = new EntitySet<Items>(new Action<Items>(this.attach_Items), new Action<Items>(this.detach_Items));
			this._Clientes = default(EntityRef<Clientes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPrescripcion", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPrescripcion
		{
			get
			{
				return this._IDPrescripcion;
			}
			set
			{
				if ((this._IDPrescripcion != value))
				{
					this.OnIDPrescripcionChanging(value);
					this.SendPropertyChanging();
					this._IDPrescripcion = value;
					this.SendPropertyChanged("IDPrescripcion");
					this.OnIDPrescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCliente", DbType="Int NOT NULL")]
		public int IDCliente
		{
			get
			{
				return this._IDCliente;
			}
			set
			{
				if ((this._IDCliente != value))
				{
					if (this._Clientes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDClienteChanging(value);
					this.SendPropertyChanging();
					this._IDCliente = value;
					this.SendPropertyChanged("IDCliente");
					this.OnIDClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEmpleado", DbType="Int NOT NULL")]
		public int IDEmpleado
		{
			get
			{
				return this._IDEmpleado;
			}
			set
			{
				if ((this._IDEmpleado != value))
				{
					this.OnIDEmpleadoChanging(value);
					this.SendPropertyChanging();
					this._IDEmpleado = value;
					this.SendPropertyChanged("IDEmpleado");
					this.OnIDEmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seguro", DbType="NVarChar(50)")]
		public string Seguro
		{
			get
			{
				return this._Seguro;
			}
			set
			{
				if ((this._Seguro != value))
				{
					this.OnSeguroChanging(value);
					this.SendPropertyChanging();
					this._Seguro = value;
					this.SendPropertyChanged("Seguro");
					this.OnSeguroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado")]
		public int Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prescripciones_Empleados", Storage="_Empleados", ThisKey="IDEmpleado", OtherKey="IDEmpleado", IsUnique=true, IsForeignKey=false)]
		public Empleados Empleados
		{
			get
			{
				return this._Empleados.Entity;
			}
			set
			{
				Empleados previousValue = this._Empleados.Entity;
				if (((previousValue != value) 
							|| (this._Empleados.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empleados.Entity = null;
						previousValue.Prescripciones = null;
					}
					this._Empleados.Entity = value;
					if ((value != null))
					{
						value.Prescripciones = this;
					}
					this.SendPropertyChanged("Empleados");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prescripciones_Items", Storage="_Items", ThisKey="IDPrescripcion", OtherKey="IDPrescripcion")]
		public EntitySet<Items> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				this._Items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clientes_Prescripciones", Storage="_Clientes", ThisKey="IDCliente", OtherKey="SS", IsForeignKey=true)]
		public Clientes Clientes
		{
			get
			{
				return this._Clientes.Entity;
			}
			set
			{
				Clientes previousValue = this._Clientes.Entity;
				if (((previousValue != value) 
							|| (this._Clientes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clientes.Entity = null;
						previousValue.Prescripciones.Remove(this);
					}
					this._Clientes.Entity = value;
					if ((value != null))
					{
						value.Prescripciones.Add(this);
						this._IDCliente = value.SS;
					}
					else
					{
						this._IDCliente = default(int);
					}
					this.SendPropertyChanged("Clientes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Items(Items entity)
		{
			this.SendPropertyChanging();
			entity.Prescripciones = this;
		}
		
		private void detach_Items(Items entity)
		{
			this.SendPropertyChanging();
			entity.Prescripciones = null;
		}
	}
}
#pragma warning restore 1591
