#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HealthCare.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MiBBDD")]
	public partial class MiDBContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertClientes(Clientes instance);
    partial void UpdateClientes(Clientes instance);
    partial void DeleteClientes(Clientes instance);
    partial void InsertDirecciones(Direcciones instance);
    partial void UpdateDirecciones(Direcciones instance);
    partial void DeleteDirecciones(Direcciones instance);
    partial void InsertItems(Items instance);
    partial void UpdateItems(Items instance);
    partial void DeleteItems(Items instance);
    partial void InsertPosiblesItem(PosiblesItem instance);
    partial void UpdatePosiblesItem(PosiblesItem instance);
    partial void DeletePosiblesItem(PosiblesItem instance);
    partial void InsertSolicitudes(Solicitudes instance);
    partial void UpdateSolicitudes(Solicitudes instance);
    partial void DeleteSolicitudes(Solicitudes instance);
    partial void InsertCategorias(Categorias instance);
    partial void UpdateCategorias(Categorias instance);
    partial void DeleteCategorias(Categorias instance);
    partial void InsertSubcategorias(Subcategorias instance);
    partial void UpdateSubcategorias(Subcategorias instance);
    partial void DeleteSubcategorias(Subcategorias instance);
    partial void InsertEmpresas(Empresas instance);
    partial void UpdateEmpresas(Empresas instance);
    partial void DeleteEmpresas(Empresas instance);
    partial void InsertPedidos(Pedidos instance);
    partial void UpdatePedidos(Pedidos instance);
    partial void DeletePedidos(Pedidos instance);
    #endregion
		
		public MiDBContextDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MiBBDDConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MiDBContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MiDBContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MiDBContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MiDBContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Clientes> Clientes
		{
			get
			{
				return this.GetTable<Clientes>();
			}
		}
		
		public System.Data.Linq.Table<Direcciones> Direcciones
		{
			get
			{
				return this.GetTable<Direcciones>();
			}
		}
		
		public System.Data.Linq.Table<Items> Items
		{
			get
			{
				return this.GetTable<Items>();
			}
		}
		
		public System.Data.Linq.Table<PosiblesItem> PosiblesItems
		{
			get
			{
				return this.GetTable<PosiblesItem>();
			}
		}
		
		public System.Data.Linq.Table<Solicitudes> Solicitudes
		{
			get
			{
				return this.GetTable<Solicitudes>();
			}
		}
		
		public System.Data.Linq.Table<Categorias> Categorias
		{
			get
			{
				return this.GetTable<Categorias>();
			}
		}
		
		public System.Data.Linq.Table<Subcategorias> Subcategorias
		{
			get
			{
				return this.GetTable<Subcategorias>();
			}
		}
		
		public System.Data.Linq.Table<Empresas> Empresas
		{
			get
			{
				return this.GetTable<Empresas>();
			}
		}
		
		public System.Data.Linq.Table<Pedidos> Pedidos
		{
			get
			{
				return this.GetTable<Pedidos>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clientes")]
	public partial class Clientes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SS;
		
		private string _Nombre;
		
		private string _Apellidos;
		
		private int _Telefono;
		
		private int _Edad;
		
		private string _Email;
		
		private EntityRef<Direcciones> _Direcciones;
		
		private EntitySet<Solicitudes> _Solicitudes;
		
		private EntitySet<Pedidos> _Pedidos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSSChanging(int value);
    partial void OnSSChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidosChanging(string value);
    partial void OnApellidosChanged();
    partial void OnTelefonoChanging(int value);
    partial void OnTelefonoChanged();
    partial void OnEdadChanging(int value);
    partial void OnEdadChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Clientes()
		{
			this._Direcciones = default(EntityRef<Direcciones>);
			this._Solicitudes = new EntitySet<Solicitudes>(new Action<Solicitudes>(this.attach_Solicitudes), new Action<Solicitudes>(this.detach_Solicitudes));
			this._Pedidos = new EntitySet<Pedidos>(new Action<Pedidos>(this.attach_Pedidos), new Action<Pedidos>(this.detach_Pedidos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SS", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SS
		{
			get
			{
				return this._SS;
			}
			set
			{
				if ((this._SS != value))
				{
					this.OnSSChanging(value);
					this.SendPropertyChanging();
					this._SS = value;
					this.SendPropertyChanged("SS");
					this.OnSSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellidos", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Apellidos
		{
			get
			{
				return this._Apellidos;
			}
			set
			{
				if ((this._Apellidos != value))
				{
					this.OnApellidosChanging(value);
					this.SendPropertyChanging();
					this._Apellidos = value;
					this.SendPropertyChanged("Apellidos");
					this.OnApellidosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="Int NOT NULL")]
		public int Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edad", DbType="Int NOT NULL")]
		public int Edad
		{
			get
			{
				return this._Edad;
			}
			set
			{
				if ((this._Edad != value))
				{
					this.OnEdadChanging(value);
					this.SendPropertyChanging();
					this._Edad = value;
					this.SendPropertyChanged("Edad");
					this.OnEdadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clientes_Direcciones", Storage="_Direcciones", ThisKey="SS", OtherKey="IDDueño", IsUnique=true, IsForeignKey=false)]
		public Direcciones Direcciones
		{
			get
			{
				return this._Direcciones.Entity;
			}
			set
			{
				Direcciones previousValue = this._Direcciones.Entity;
				if (((previousValue != value) 
							|| (this._Direcciones.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Direcciones.Entity = null;
						previousValue.Clientes = null;
					}
					this._Direcciones.Entity = value;
					if ((value != null))
					{
						value.Clientes = this;
					}
					this.SendPropertyChanged("Direcciones");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clientes_Solicitudes", Storage="_Solicitudes", ThisKey="SS", OtherKey="IDCliente")]
		public EntitySet<Solicitudes> Solicitudes
		{
			get
			{
				return this._Solicitudes;
			}
			set
			{
				this._Solicitudes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clientes_Pedidos", Storage="_Pedidos", ThisKey="SS", OtherKey="IDCliente")]
		public EntitySet<Pedidos> Pedidos
		{
			get
			{
				return this._Pedidos;
			}
			set
			{
				this._Pedidos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Solicitudes(Solicitudes entity)
		{
			this.SendPropertyChanging();
			entity.Clientes = this;
		}
		
		private void detach_Solicitudes(Solicitudes entity)
		{
			this.SendPropertyChanging();
			entity.Clientes = null;
		}
		
		private void attach_Pedidos(Pedidos entity)
		{
			this.SendPropertyChanging();
			entity.Clientes = this;
		}
		
		private void detach_Pedidos(Pedidos entity)
		{
			this.SendPropertyChanging();
			entity.Clientes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Direcciones")]
	public partial class Direcciones : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDDueño;
		
		private string _Calle;
		
		private int _Numero;
		
		private string _Puerta;
		
		private int _Codigo_Postal;
		
		private string _Detalles;
		
		private System.Nullable<int> _Portal;
		
		private System.Nullable<int> _Piso;
		
		private EntityRef<Clientes> _Clientes;
		
		private EntityRef<Empresas> _Empresas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDDueñoChanging(int value);
    partial void OnIDDueñoChanged();
    partial void OnCalleChanging(string value);
    partial void OnCalleChanged();
    partial void OnNumeroChanging(int value);
    partial void OnNumeroChanged();
    partial void OnPuertaChanging(string value);
    partial void OnPuertaChanged();
    partial void OnCodigo_PostalChanging(int value);
    partial void OnCodigo_PostalChanged();
    partial void OnDetallesChanging(string value);
    partial void OnDetallesChanged();
    partial void OnPortalChanging(System.Nullable<int> value);
    partial void OnPortalChanged();
    partial void OnPisoChanging(System.Nullable<int> value);
    partial void OnPisoChanged();
    #endregion
		
		public Direcciones()
		{
			this._Clientes = default(EntityRef<Clientes>);
			this._Empresas = default(EntityRef<Empresas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDueño", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDDueño
		{
			get
			{
				return this._IDDueño;
			}
			set
			{
				if ((this._IDDueño != value))
				{
					if ((this._Clientes.HasLoadedOrAssignedValue || this._Empresas.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDueñoChanging(value);
					this.SendPropertyChanging();
					this._IDDueño = value;
					this.SendPropertyChanged("IDDueño");
					this.OnIDDueñoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Calle", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Calle
		{
			get
			{
				return this._Calle;
			}
			set
			{
				if ((this._Calle != value))
				{
					this.OnCalleChanging(value);
					this.SendPropertyChanging();
					this._Calle = value;
					this.SendPropertyChanged("Calle");
					this.OnCalleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero", DbType="Int NOT NULL")]
		public int Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Puerta", DbType="NChar(10)")]
		public string Puerta
		{
			get
			{
				return this._Puerta;
			}
			set
			{
				if ((this._Puerta != value))
				{
					this.OnPuertaChanging(value);
					this.SendPropertyChanging();
					this._Puerta = value;
					this.SendPropertyChanged("Puerta");
					this.OnPuertaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Codigo Postal]", Storage="_Codigo_Postal", DbType="Int NOT NULL")]
		public int Codigo_Postal
		{
			get
			{
				return this._Codigo_Postal;
			}
			set
			{
				if ((this._Codigo_Postal != value))
				{
					this.OnCodigo_PostalChanging(value);
					this.SendPropertyChanging();
					this._Codigo_Postal = value;
					this.SendPropertyChanged("Codigo_Postal");
					this.OnCodigo_PostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detalles", DbType="NVarChar(MAX)")]
		public string Detalles
		{
			get
			{
				return this._Detalles;
			}
			set
			{
				if ((this._Detalles != value))
				{
					this.OnDetallesChanging(value);
					this.SendPropertyChanging();
					this._Detalles = value;
					this.SendPropertyChanged("Detalles");
					this.OnDetallesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Portal", DbType="Int")]
		public System.Nullable<int> Portal
		{
			get
			{
				return this._Portal;
			}
			set
			{
				if ((this._Portal != value))
				{
					this.OnPortalChanging(value);
					this.SendPropertyChanging();
					this._Portal = value;
					this.SendPropertyChanged("Portal");
					this.OnPortalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Piso", DbType="Int")]
		public System.Nullable<int> Piso
		{
			get
			{
				return this._Piso;
			}
			set
			{
				if ((this._Piso != value))
				{
					this.OnPisoChanging(value);
					this.SendPropertyChanging();
					this._Piso = value;
					this.SendPropertyChanged("Piso");
					this.OnPisoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clientes_Direcciones", Storage="_Clientes", ThisKey="IDDueño", OtherKey="SS", IsForeignKey=true)]
		public Clientes Clientes
		{
			get
			{
				return this._Clientes.Entity;
			}
			set
			{
				Clientes previousValue = this._Clientes.Entity;
				if (((previousValue != value) 
							|| (this._Clientes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clientes.Entity = null;
						previousValue.Direcciones = null;
					}
					this._Clientes.Entity = value;
					if ((value != null))
					{
						value.Direcciones = this;
						this._IDDueño = value.SS;
					}
					else
					{
						this._IDDueño = default(int);
					}
					this.SendPropertyChanged("Clientes");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Direcciones", Storage="_Empresas", ThisKey="IDDueño", OtherKey="IDEmpresa", IsForeignKey=true)]
		public Empresas Empresas
		{
			get
			{
				return this._Empresas.Entity;
			}
			set
			{
				Empresas previousValue = this._Empresas.Entity;
				if (((previousValue != value) 
							|| (this._Empresas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empresas.Entity = null;
						previousValue.Direcciones = null;
					}
					this._Empresas.Entity = value;
					if ((value != null))
					{
						value.Direcciones = this;
						this._IDDueño = value.IDEmpresa;
					}
					else
					{
						this._IDDueño = default(int);
					}
					this.SendPropertyChanged("Empresas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Items")]
	public partial class Items : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDItem;
		
		private string _Nombre;
		
		private double _Precio;
		
		private int _IDEmpresa;
		
		private EntitySet<Pedidos> _Pedidos;
		
		private EntityRef<Solicitudes> _Solicitudes;
		
		private EntityRef<Empresas> _Empresas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDItemChanging(int value);
    partial void OnIDItemChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnPrecioChanging(double value);
    partial void OnPrecioChanged();
    partial void OnIDEmpresaChanging(int value);
    partial void OnIDEmpresaChanged();
    #endregion
		
		public Items()
		{
			this._Pedidos = new EntitySet<Pedidos>(new Action<Pedidos>(this.attach_Pedidos), new Action<Pedidos>(this.detach_Pedidos));
			this._Solicitudes = default(EntityRef<Solicitudes>);
			this._Empresas = default(EntityRef<Empresas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDItem", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDItem
		{
			get
			{
				return this._IDItem;
			}
			set
			{
				if ((this._IDItem != value))
				{
					this.OnIDItemChanging(value);
					this.SendPropertyChanging();
					this._IDItem = value;
					this.SendPropertyChanged("IDItem");
					this.OnIDItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="Float NOT NULL")]
		public double Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEmpresa", DbType="Int NOT NULL")]
		public int IDEmpresa
		{
			get
			{
				return this._IDEmpresa;
			}
			set
			{
				if ((this._IDEmpresa != value))
				{
					if ((this._Solicitudes.HasLoadedOrAssignedValue || this._Empresas.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDEmpresaChanging(value);
					this.SendPropertyChanging();
					this._IDEmpresa = value;
					this.SendPropertyChanged("IDEmpresa");
					this.OnIDEmpresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Items_Pedidos", Storage="_Pedidos", ThisKey="IDItem", OtherKey="IDItem")]
		public EntitySet<Pedidos> Pedidos
		{
			get
			{
				return this._Pedidos;
			}
			set
			{
				this._Pedidos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Solicitudes_Items", Storage="_Solicitudes", ThisKey="IDEmpresa", OtherKey="IDEmpresa", IsForeignKey=true)]
		public Solicitudes Solicitudes
		{
			get
			{
				return this._Solicitudes.Entity;
			}
			set
			{
				Solicitudes previousValue = this._Solicitudes.Entity;
				if (((previousValue != value) 
							|| (this._Solicitudes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Solicitudes.Entity = null;
						previousValue.Items.Remove(this);
					}
					this._Solicitudes.Entity = value;
					if ((value != null))
					{
						value.Items.Add(this);
						this._IDEmpresa = value.IDEmpresa;
					}
					else
					{
						this._IDEmpresa = default(int);
					}
					this.SendPropertyChanged("Solicitudes");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Items", Storage="_Empresas", ThisKey="IDEmpresa", OtherKey="IDEmpresa", IsForeignKey=true)]
		public Empresas Empresas
		{
			get
			{
				return this._Empresas.Entity;
			}
			set
			{
				Empresas previousValue = this._Empresas.Entity;
				if (((previousValue != value) 
							|| (this._Empresas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empresas.Entity = null;
						previousValue.Items.Remove(this);
					}
					this._Empresas.Entity = value;
					if ((value != null))
					{
						value.Items.Add(this);
						this._IDEmpresa = value.IDEmpresa;
					}
					else
					{
						this._IDEmpresa = default(int);
					}
					this.SendPropertyChanged("Empresas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pedidos(Pedidos entity)
		{
			this.SendPropertyChanging();
			entity.Items = this;
		}
		
		private void detach_Pedidos(Pedidos entity)
		{
			this.SendPropertyChanging();
			entity.Items = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PosiblesItems")]
	public partial class PosiblesItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nombre;
		
		private int _IDEmpresa;
		
		private string _Precio;
		
		private EntityRef<Empresas> _Empresas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnIDEmpresaChanging(int value);
    partial void OnIDEmpresaChanged();
    partial void OnPrecioChanging(string value);
    partial void OnPrecioChanged();
    #endregion
		
		public PosiblesItem()
		{
			this._Empresas = default(EntityRef<Empresas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEmpresa", DbType="Int NOT NULL")]
		public int IDEmpresa
		{
			get
			{
				return this._IDEmpresa;
			}
			set
			{
				if ((this._IDEmpresa != value))
				{
					if (this._Empresas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDEmpresaChanging(value);
					this.SendPropertyChanging();
					this._IDEmpresa = value;
					this.SendPropertyChanged("IDEmpresa");
					this.OnIDEmpresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_PosiblesItem", Storage="_Empresas", ThisKey="IDEmpresa", OtherKey="IDEmpresa", IsForeignKey=true)]
		public Empresas Empresas
		{
			get
			{
				return this._Empresas.Entity;
			}
			set
			{
				Empresas previousValue = this._Empresas.Entity;
				if (((previousValue != value) 
							|| (this._Empresas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empresas.Entity = null;
						previousValue.PosiblesItems.Remove(this);
					}
					this._Empresas.Entity = value;
					if ((value != null))
					{
						value.PosiblesItems.Add(this);
						this._IDEmpresa = value.IDEmpresa;
					}
					else
					{
						this._IDEmpresa = default(int);
					}
					this.SendPropertyChanged("Empresas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Solicitudes")]
	public partial class Solicitudes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDCliente;
		
		private int _IDEmpresa;
		
		private string _Hora;
		
		private int _Estado;
		
		private int _IDSolicitud;
		
		private bool _Oculto;
		
		private EntitySet<Items> _Items;
		
		private EntitySet<Pedidos> _Pedidos;
		
		private EntityRef<Clientes> _Clientes;
		
		private EntityRef<Empresas> _Empresas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDClienteChanging(int value);
    partial void OnIDClienteChanged();
    partial void OnIDEmpresaChanging(int value);
    partial void OnIDEmpresaChanged();
    partial void OnHoraChanging(string value);
    partial void OnHoraChanged();
    partial void OnEstadoChanging(int value);
    partial void OnEstadoChanged();
    partial void OnIDSolicitudChanging(int value);
    partial void OnIDSolicitudChanged();
    partial void OnOcultoChanging(bool value);
    partial void OnOcultoChanged();
    #endregion
		
		public Solicitudes()
		{
			this._Items = new EntitySet<Items>(new Action<Items>(this.attach_Items), new Action<Items>(this.detach_Items));
			this._Pedidos = new EntitySet<Pedidos>(new Action<Pedidos>(this.attach_Pedidos), new Action<Pedidos>(this.detach_Pedidos));
			this._Clientes = default(EntityRef<Clientes>);
			this._Empresas = default(EntityRef<Empresas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCliente", DbType="Int NOT NULL")]
		public int IDCliente
		{
			get
			{
				return this._IDCliente;
			}
			set
			{
				if ((this._IDCliente != value))
				{
					if (this._Clientes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDClienteChanging(value);
					this.SendPropertyChanging();
					this._IDCliente = value;
					this.SendPropertyChanged("IDCliente");
					this.OnIDClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEmpresa", DbType="Int NOT NULL")]
		public int IDEmpresa
		{
			get
			{
				return this._IDEmpresa;
			}
			set
			{
				if ((this._IDEmpresa != value))
				{
					if (this._Empresas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDEmpresaChanging(value);
					this.SendPropertyChanging();
					this._IDEmpresa = value;
					this.SendPropertyChanged("IDEmpresa");
					this.OnIDEmpresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hora", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Hora
		{
			get
			{
				return this._Hora;
			}
			set
			{
				if ((this._Hora != value))
				{
					this.OnHoraChanging(value);
					this.SendPropertyChanging();
					this._Hora = value;
					this.SendPropertyChanged("Hora");
					this.OnHoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Int NOT NULL")]
		public int Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSolicitud", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDSolicitud
		{
			get
			{
				return this._IDSolicitud;
			}
			set
			{
				if ((this._IDSolicitud != value))
				{
					this.OnIDSolicitudChanging(value);
					this.SendPropertyChanging();
					this._IDSolicitud = value;
					this.SendPropertyChanged("IDSolicitud");
					this.OnIDSolicitudChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oculto", DbType="Bit NOT NULL")]
		public bool Oculto
		{
			get
			{
				return this._Oculto;
			}
			set
			{
				if ((this._Oculto != value))
				{
					this.OnOcultoChanging(value);
					this.SendPropertyChanging();
					this._Oculto = value;
					this.SendPropertyChanged("Oculto");
					this.OnOcultoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Solicitudes_Items", Storage="_Items", ThisKey="IDEmpresa", OtherKey="IDEmpresa")]
		public EntitySet<Items> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				this._Items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Solicitudes_Pedidos", Storage="_Pedidos", ThisKey="IDSolicitud", OtherKey="IDSolicitud")]
		public EntitySet<Pedidos> Pedidos
		{
			get
			{
				return this._Pedidos;
			}
			set
			{
				this._Pedidos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clientes_Solicitudes", Storage="_Clientes", ThisKey="IDCliente", OtherKey="SS", IsForeignKey=true)]
		public Clientes Clientes
		{
			get
			{
				return this._Clientes.Entity;
			}
			set
			{
				Clientes previousValue = this._Clientes.Entity;
				if (((previousValue != value) 
							|| (this._Clientes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clientes.Entity = null;
						previousValue.Solicitudes.Remove(this);
					}
					this._Clientes.Entity = value;
					if ((value != null))
					{
						value.Solicitudes.Add(this);
						this._IDCliente = value.SS;
					}
					else
					{
						this._IDCliente = default(int);
					}
					this.SendPropertyChanged("Clientes");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Solicitudes", Storage="_Empresas", ThisKey="IDEmpresa", OtherKey="IDEmpresa", IsForeignKey=true)]
		public Empresas Empresas
		{
			get
			{
				return this._Empresas.Entity;
			}
			set
			{
				Empresas previousValue = this._Empresas.Entity;
				if (((previousValue != value) 
							|| (this._Empresas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empresas.Entity = null;
						previousValue.Solicitudes.Remove(this);
					}
					this._Empresas.Entity = value;
					if ((value != null))
					{
						value.Solicitudes.Add(this);
						this._IDEmpresa = value.IDEmpresa;
					}
					else
					{
						this._IDEmpresa = default(int);
					}
					this.SendPropertyChanged("Empresas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Items(Items entity)
		{
			this.SendPropertyChanging();
			entity.Solicitudes = this;
		}
		
		private void detach_Items(Items entity)
		{
			this.SendPropertyChanging();
			entity.Solicitudes = null;
		}
		
		private void attach_Pedidos(Pedidos entity)
		{
			this.SendPropertyChanging();
			entity.Solicitudes = this;
		}
		
		private void detach_Pedidos(Pedidos entity)
		{
			this.SendPropertyChanging();
			entity.Solicitudes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categorias")]
	public partial class Categorias : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nombre;
		
		private int _Empresas;
		
		private string _Color;
		
		private EntitySet<Subcategorias> _Subcategorias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnEmpresasChanging(int value);
    partial void OnEmpresasChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    #endregion
		
		public Categorias()
		{
			this._Subcategorias = new EntitySet<Subcategorias>(new Action<Subcategorias>(this.attach_Subcategorias), new Action<Subcategorias>(this.detach_Subcategorias));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Empresas", DbType="Int NOT NULL")]
		public int Empresas
		{
			get
			{
				return this._Empresas;
			}
			set
			{
				if ((this._Empresas != value))
				{
					this.OnEmpresasChanging(value);
					this.SendPropertyChanging();
					this._Empresas = value;
					this.SendPropertyChanged("Empresas");
					this.OnEmpresasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_Subcategoria", Storage="_Subcategorias", ThisKey="Nombre", OtherKey="Categoria")]
		public EntitySet<Subcategorias> Subcategorias
		{
			get
			{
				return this._Subcategorias;
			}
			set
			{
				this._Subcategorias.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Subcategorias(Subcategorias entity)
		{
			this.SendPropertyChanging();
			entity.Categorias = this;
		}
		
		private void detach_Subcategorias(Subcategorias entity)
		{
			this.SendPropertyChanging();
			entity.Categorias = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Subcategorias")]
	public partial class Subcategorias : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Categoria;
		
		private string _Nombre;
		
		private string _Color;
		
		private int _Empresas;
		
		private EntityRef<Categorias> _Categorias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoriaChanging(string value);
    partial void OnCategoriaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnEmpresasChanging(int value);
    partial void OnEmpresasChanged();
    #endregion
		
		public Subcategorias()
		{
			this._Categorias = default(EntityRef<Categorias>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categoria", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Categoria
		{
			get
			{
				return this._Categoria;
			}
			set
			{
				if ((this._Categoria != value))
				{
					if (this._Categorias.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoriaChanging(value);
					this.SendPropertyChanging();
					this._Categoria = value;
					this.SendPropertyChanged("Categoria");
					this.OnCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Empresas", DbType="Int NOT NULL")]
		public int Empresas
		{
			get
			{
				return this._Empresas;
			}
			set
			{
				if ((this._Empresas != value))
				{
					this.OnEmpresasChanging(value);
					this.SendPropertyChanging();
					this._Empresas = value;
					this.SendPropertyChanged("Empresas");
					this.OnEmpresasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_Subcategoria", Storage="_Categorias", ThisKey="Categoria", OtherKey="Nombre", IsForeignKey=true)]
		public Categorias Categorias
		{
			get
			{
				return this._Categorias.Entity;
			}
			set
			{
				Categorias previousValue = this._Categorias.Entity;
				if (((previousValue != value) 
							|| (this._Categorias.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Categorias.Entity = null;
						previousValue.Subcategorias.Remove(this);
					}
					this._Categorias.Entity = value;
					if ((value != null))
					{
						value.Subcategorias.Add(this);
						this._Categoria = value.Nombre;
					}
					else
					{
						this._Categoria = default(string);
					}
					this.SendPropertyChanged("Categorias");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Empresas")]
	public partial class Empresas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDEmpresa;
		
		private string _Nombre;
		
		private string _Subcategoria;
		
		private int _Telefono;
		
		private string _Email;
		
		private string _Descripcion;
		
		private int _Valoracion;
		
		private string _Categoria;
		
		private EntityRef<Direcciones> _Direcciones;
		
		private EntitySet<Items> _Items;
		
		private EntitySet<PosiblesItem> _PosiblesItems;
		
		private EntitySet<Solicitudes> _Solicitudes;
		
		private EntitySet<Pedidos> _Pedidos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDEmpresaChanging(int value);
    partial void OnIDEmpresaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnSubcategoriaChanging(string value);
    partial void OnSubcategoriaChanged();
    partial void OnTelefonoChanging(int value);
    partial void OnTelefonoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnValoracionChanging(int value);
    partial void OnValoracionChanged();
    partial void OnCategoriaChanging(string value);
    partial void OnCategoriaChanged();
    #endregion
		
		public Empresas()
		{
			this._Direcciones = default(EntityRef<Direcciones>);
			this._Items = new EntitySet<Items>(new Action<Items>(this.attach_Items), new Action<Items>(this.detach_Items));
			this._PosiblesItems = new EntitySet<PosiblesItem>(new Action<PosiblesItem>(this.attach_PosiblesItems), new Action<PosiblesItem>(this.detach_PosiblesItems));
			this._Solicitudes = new EntitySet<Solicitudes>(new Action<Solicitudes>(this.attach_Solicitudes), new Action<Solicitudes>(this.detach_Solicitudes));
			this._Pedidos = new EntitySet<Pedidos>(new Action<Pedidos>(this.attach_Pedidos), new Action<Pedidos>(this.detach_Pedidos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEmpresa", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDEmpresa
		{
			get
			{
				return this._IDEmpresa;
			}
			set
			{
				if ((this._IDEmpresa != value))
				{
					this.OnIDEmpresaChanging(value);
					this.SendPropertyChanging();
					this._IDEmpresa = value;
					this.SendPropertyChanged("IDEmpresa");
					this.OnIDEmpresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subcategoria", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Subcategoria
		{
			get
			{
				return this._Subcategoria;
			}
			set
			{
				if ((this._Subcategoria != value))
				{
					this.OnSubcategoriaChanging(value);
					this.SendPropertyChanging();
					this._Subcategoria = value;
					this.SendPropertyChanged("Subcategoria");
					this.OnSubcategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="Int NOT NULL")]
		public int Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valoracion", DbType="Int NOT NULL")]
		public int Valoracion
		{
			get
			{
				return this._Valoracion;
			}
			set
			{
				if ((this._Valoracion != value))
				{
					this.OnValoracionChanging(value);
					this.SendPropertyChanging();
					this._Valoracion = value;
					this.SendPropertyChanged("Valoracion");
					this.OnValoracionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categoria", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Categoria
		{
			get
			{
				return this._Categoria;
			}
			set
			{
				if ((this._Categoria != value))
				{
					this.OnCategoriaChanging(value);
					this.SendPropertyChanging();
					this._Categoria = value;
					this.SendPropertyChanged("Categoria");
					this.OnCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Direcciones", Storage="_Direcciones", ThisKey="IDEmpresa", OtherKey="IDDueño", IsUnique=true, IsForeignKey=false)]
		public Direcciones Direcciones
		{
			get
			{
				return this._Direcciones.Entity;
			}
			set
			{
				Direcciones previousValue = this._Direcciones.Entity;
				if (((previousValue != value) 
							|| (this._Direcciones.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Direcciones.Entity = null;
						previousValue.Empresas = null;
					}
					this._Direcciones.Entity = value;
					if ((value != null))
					{
						value.Empresas = this;
					}
					this.SendPropertyChanged("Direcciones");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Items", Storage="_Items", ThisKey="IDEmpresa", OtherKey="IDEmpresa")]
		public EntitySet<Items> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				this._Items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_PosiblesItem", Storage="_PosiblesItems", ThisKey="IDEmpresa", OtherKey="IDEmpresa")]
		public EntitySet<PosiblesItem> PosiblesItems
		{
			get
			{
				return this._PosiblesItems;
			}
			set
			{
				this._PosiblesItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Solicitudes", Storage="_Solicitudes", ThisKey="IDEmpresa", OtherKey="IDEmpresa")]
		public EntitySet<Solicitudes> Solicitudes
		{
			get
			{
				return this._Solicitudes;
			}
			set
			{
				this._Solicitudes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Pedidos", Storage="_Pedidos", ThisKey="IDEmpresa", OtherKey="IDEmpresa")]
		public EntitySet<Pedidos> Pedidos
		{
			get
			{
				return this._Pedidos;
			}
			set
			{
				this._Pedidos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Items(Items entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = this;
		}
		
		private void detach_Items(Items entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = null;
		}
		
		private void attach_PosiblesItems(PosiblesItem entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = this;
		}
		
		private void detach_PosiblesItems(PosiblesItem entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = null;
		}
		
		private void attach_Solicitudes(Solicitudes entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = this;
		}
		
		private void detach_Solicitudes(Solicitudes entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = null;
		}
		
		private void attach_Pedidos(Pedidos entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = this;
		}
		
		private void detach_Pedidos(Pedidos entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pedidos")]
	public partial class Pedidos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPedido;
		
		private int _IDEmpresa;
		
		private int _IDItem;
		
		private int _IDCliente;
		
		private int _IDSolicitud;
		
		private EntityRef<Items> _Items;
		
		private EntityRef<Clientes> _Clientes;
		
		private EntityRef<Solicitudes> _Solicitudes;
		
		private EntityRef<Empresas> _Empresas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPedidoChanging(int value);
    partial void OnIDPedidoChanged();
    partial void OnIDEmpresaChanging(int value);
    partial void OnIDEmpresaChanged();
    partial void OnIDItemChanging(int value);
    partial void OnIDItemChanged();
    partial void OnIDClienteChanging(int value);
    partial void OnIDClienteChanged();
    partial void OnIDSolicitudChanging(int value);
    partial void OnIDSolicitudChanged();
    #endregion
		
		public Pedidos()
		{
			this._Items = default(EntityRef<Items>);
			this._Clientes = default(EntityRef<Clientes>);
			this._Solicitudes = default(EntityRef<Solicitudes>);
			this._Empresas = default(EntityRef<Empresas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPedido", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPedido
		{
			get
			{
				return this._IDPedido;
			}
			set
			{
				if ((this._IDPedido != value))
				{
					this.OnIDPedidoChanging(value);
					this.SendPropertyChanging();
					this._IDPedido = value;
					this.SendPropertyChanged("IDPedido");
					this.OnIDPedidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEmpresa", DbType="Int NOT NULL")]
		public int IDEmpresa
		{
			get
			{
				return this._IDEmpresa;
			}
			set
			{
				if ((this._IDEmpresa != value))
				{
					if (this._Empresas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDEmpresaChanging(value);
					this.SendPropertyChanging();
					this._IDEmpresa = value;
					this.SendPropertyChanged("IDEmpresa");
					this.OnIDEmpresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDItem", DbType="Int NOT NULL")]
		public int IDItem
		{
			get
			{
				return this._IDItem;
			}
			set
			{
				if ((this._IDItem != value))
				{
					if (this._Items.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDItemChanging(value);
					this.SendPropertyChanging();
					this._IDItem = value;
					this.SendPropertyChanged("IDItem");
					this.OnIDItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCliente", DbType="Int NOT NULL")]
		public int IDCliente
		{
			get
			{
				return this._IDCliente;
			}
			set
			{
				if ((this._IDCliente != value))
				{
					if (this._Clientes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDClienteChanging(value);
					this.SendPropertyChanging();
					this._IDCliente = value;
					this.SendPropertyChanged("IDCliente");
					this.OnIDClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSolicitud", DbType="Int NOT NULL")]
		public int IDSolicitud
		{
			get
			{
				return this._IDSolicitud;
			}
			set
			{
				if ((this._IDSolicitud != value))
				{
					if (this._Solicitudes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSolicitudChanging(value);
					this.SendPropertyChanging();
					this._IDSolicitud = value;
					this.SendPropertyChanged("IDSolicitud");
					this.OnIDSolicitudChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Items_Pedidos", Storage="_Items", ThisKey="IDItem", OtherKey="IDItem", IsForeignKey=true)]
		public Items Items
		{
			get
			{
				return this._Items.Entity;
			}
			set
			{
				Items previousValue = this._Items.Entity;
				if (((previousValue != value) 
							|| (this._Items.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Items.Entity = null;
						previousValue.Pedidos.Remove(this);
					}
					this._Items.Entity = value;
					if ((value != null))
					{
						value.Pedidos.Add(this);
						this._IDItem = value.IDItem;
					}
					else
					{
						this._IDItem = default(int);
					}
					this.SendPropertyChanged("Items");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clientes_Pedidos", Storage="_Clientes", ThisKey="IDCliente", OtherKey="SS", IsForeignKey=true)]
		public Clientes Clientes
		{
			get
			{
				return this._Clientes.Entity;
			}
			set
			{
				Clientes previousValue = this._Clientes.Entity;
				if (((previousValue != value) 
							|| (this._Clientes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clientes.Entity = null;
						previousValue.Pedidos.Remove(this);
					}
					this._Clientes.Entity = value;
					if ((value != null))
					{
						value.Pedidos.Add(this);
						this._IDCliente = value.SS;
					}
					else
					{
						this._IDCliente = default(int);
					}
					this.SendPropertyChanged("Clientes");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Solicitudes_Pedidos", Storage="_Solicitudes", ThisKey="IDSolicitud", OtherKey="IDSolicitud", IsForeignKey=true)]
		public Solicitudes Solicitudes
		{
			get
			{
				return this._Solicitudes.Entity;
			}
			set
			{
				Solicitudes previousValue = this._Solicitudes.Entity;
				if (((previousValue != value) 
							|| (this._Solicitudes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Solicitudes.Entity = null;
						previousValue.Pedidos.Remove(this);
					}
					this._Solicitudes.Entity = value;
					if ((value != null))
					{
						value.Pedidos.Add(this);
						this._IDSolicitud = value.IDSolicitud;
					}
					else
					{
						this._IDSolicitud = default(int);
					}
					this.SendPropertyChanged("Solicitudes");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Pedidos", Storage="_Empresas", ThisKey="IDEmpresa", OtherKey="IDEmpresa", IsForeignKey=true)]
		public Empresas Empresas
		{
			get
			{
				return this._Empresas.Entity;
			}
			set
			{
				Empresas previousValue = this._Empresas.Entity;
				if (((previousValue != value) 
							|| (this._Empresas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empresas.Entity = null;
						previousValue.Pedidos.Remove(this);
					}
					this._Empresas.Entity = value;
					if ((value != null))
					{
						value.Pedidos.Add(this);
						this._IDEmpresa = value.IDEmpresa;
					}
					else
					{
						this._IDEmpresa = default(int);
					}
					this.SendPropertyChanged("Empresas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
