#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HealthCare.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MiBBDD")]
	public partial class MiDBContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCategoria(Categoria instance);
    partial void UpdateCategoria(Categoria instance);
    partial void DeleteCategoria(Categoria instance);
    partial void InsertSubcategoria(Subcategoria instance);
    partial void UpdateSubcategoria(Subcategoria instance);
    partial void DeleteSubcategoria(Subcategoria instance);
    partial void InsertCliente(Cliente instance);
    partial void UpdateCliente(Cliente instance);
    partial void DeleteCliente(Cliente instance);
    partial void InsertDireccion(Direccion instance);
    partial void UpdateDireccion(Direccion instance);
    partial void DeleteDireccion(Direccion instance);
    partial void InsertEmpresa(Empresa instance);
    partial void UpdateEmpresa(Empresa instance);
    partial void DeleteEmpresa(Empresa instance);
    partial void InsertPedido(Pedido instance);
    partial void UpdatePedido(Pedido instance);
    partial void DeletePedido(Pedido instance);
    partial void InsertItem(Item instance);
    partial void UpdateItem(Item instance);
    partial void DeleteItem(Item instance);
    #endregion
		
		public MiDBContextDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MiBBDDConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MiDBContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MiDBContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MiDBContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MiDBContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Categoria> Categorias
		{
			get
			{
				return this.GetTable<Categoria>();
			}
		}
		
		public System.Data.Linq.Table<Subcategoria> Subcategorias
		{
			get
			{
				return this.GetTable<Subcategoria>();
			}
		}
		
		public System.Data.Linq.Table<Cliente> Clientes
		{
			get
			{
				return this.GetTable<Cliente>();
			}
		}
		
		public System.Data.Linq.Table<Direccion> Direccions
		{
			get
			{
				return this.GetTable<Direccion>();
			}
		}
		
		public System.Data.Linq.Table<Empresa> Empresas
		{
			get
			{
				return this.GetTable<Empresa>();
			}
		}
		
		public System.Data.Linq.Table<Pedido> Pedidos
		{
			get
			{
				return this.GetTable<Pedido>();
			}
		}
		
		public System.Data.Linq.Table<Item> Items
		{
			get
			{
				return this.GetTable<Item>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categorias")]
	public partial class Categoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nombre;
		
		private int _Empresas;
		
		private EntitySet<Subcategoria> _Subcategorias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnEmpresasChanging(int value);
    partial void OnEmpresasChanged();
    #endregion
		
		public Categoria()
		{
			this._Subcategorias = new EntitySet<Subcategoria>(new Action<Subcategoria>(this.attach_Subcategorias), new Action<Subcategoria>(this.detach_Subcategorias));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Empresas", DbType="Int NOT NULL")]
		public int Empresas
		{
			get
			{
				return this._Empresas;
			}
			set
			{
				if ((this._Empresas != value))
				{
					this.OnEmpresasChanging(value);
					this.SendPropertyChanging();
					this._Empresas = value;
					this.SendPropertyChanged("Empresas");
					this.OnEmpresasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_Subcategoria", Storage="_Subcategorias", ThisKey="Nombre", OtherKey="Categoria")]
		public EntitySet<Subcategoria> Subcategorias
		{
			get
			{
				return this._Subcategorias;
			}
			set
			{
				this._Subcategorias.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Subcategorias(Subcategoria entity)
		{
			this.SendPropertyChanging();
			entity.Categoria1 = this;
		}
		
		private void detach_Subcategorias(Subcategoria entity)
		{
			this.SendPropertyChanging();
			entity.Categoria1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Subcategorias")]
	public partial class Subcategoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Categoria;
		
		private string _Nombre;
		
		private int _Empresas;
		
		private EntityRef<Categoria> _Categoria1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoriaChanging(string value);
    partial void OnCategoriaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnEmpresasChanging(int value);
    partial void OnEmpresasChanged();
    #endregion
		
		public Subcategoria()
		{
			this._Categoria1 = default(EntityRef<Categoria>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categoria", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Categoria
		{
			get
			{
				return this._Categoria;
			}
			set
			{
				if ((this._Categoria != value))
				{
					if (this._Categoria1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoriaChanging(value);
					this.SendPropertyChanging();
					this._Categoria = value;
					this.SendPropertyChanged("Categoria");
					this.OnCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Empresas", DbType="Int NOT NULL")]
		public int Empresas
		{
			get
			{
				return this._Empresas;
			}
			set
			{
				if ((this._Empresas != value))
				{
					this.OnEmpresasChanging(value);
					this.SendPropertyChanging();
					this._Empresas = value;
					this.SendPropertyChanged("Empresas");
					this.OnEmpresasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_Subcategoria", Storage="_Categoria1", ThisKey="Categoria", OtherKey="Nombre", IsForeignKey=true)]
		public Categoria Categoria1
		{
			get
			{
				return this._Categoria1.Entity;
			}
			set
			{
				Categoria previousValue = this._Categoria1.Entity;
				if (((previousValue != value) 
							|| (this._Categoria1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Categoria1.Entity = null;
						previousValue.Subcategorias.Remove(this);
					}
					this._Categoria1.Entity = value;
					if ((value != null))
					{
						value.Subcategorias.Add(this);
						this._Categoria = value.Nombre;
					}
					else
					{
						this._Categoria = default(string);
					}
					this.SendPropertyChanged("Categoria1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clientes")]
	public partial class Cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _SS;
		
		private string _Nombre;
		
		private string _Apellidos;
		
		private int _Telefono;
		
		private int _Edad;
		
		private string _Email;
		
		private int _ID;
		
		private EntityRef<Direccion> _Direccions;
		
		private EntitySet<Pedido> _Pedidos;
		
		private EntityRef<Pedido> _Pedido;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSSChanging(long value);
    partial void OnSSChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidosChanging(string value);
    partial void OnApellidosChanged();
    partial void OnTelefonoChanging(int value);
    partial void OnTelefonoChanged();
    partial void OnEdadChanging(int value);
    partial void OnEdadChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    #endregion
		
		public Cliente()
		{
			this._Direccions = default(EntityRef<Direccion>);
			this._Pedidos = new EntitySet<Pedido>(new Action<Pedido>(this.attach_Pedidos), new Action<Pedido>(this.detach_Pedidos));
			this._Pedido = default(EntityRef<Pedido>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SS", DbType="BigInt NOT NULL")]
		public long SS
		{
			get
			{
				return this._SS;
			}
			set
			{
				if ((this._SS != value))
				{
					if (this._Pedido.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSSChanging(value);
					this.SendPropertyChanging();
					this._SS = value;
					this.SendPropertyChanged("SS");
					this.OnSSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellidos", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Apellidos
		{
			get
			{
				return this._Apellidos;
			}
			set
			{
				if ((this._Apellidos != value))
				{
					this.OnApellidosChanging(value);
					this.SendPropertyChanging();
					this._Apellidos = value;
					this.SendPropertyChanged("Apellidos");
					this.OnApellidosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="Int NOT NULL")]
		public int Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edad", DbType="Int NOT NULL")]
		public int Edad
		{
			get
			{
				return this._Edad;
			}
			set
			{
				if ((this._Edad != value))
				{
					this.OnEdadChanging(value);
					this.SendPropertyChanging();
					this._Edad = value;
					this.SendPropertyChanged("Edad");
					this.OnEdadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Direccion", Storage="_Direccions", ThisKey="SS", OtherKey="Dueño", IsUnique=true, IsForeignKey=false)]
		public Direccion Direccions
		{
			get
			{
				return this._Direccions.Entity;
			}
			set
			{
				Direccion previousValue = this._Direccions.Entity;
				if (((previousValue != value) 
							|| (this._Direccions.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Direccions.Entity = null;
						previousValue.Cliente = null;
					}
					this._Direccions.Entity = value;
					if ((value != null))
					{
						value.Cliente = this;
					}
					this.SendPropertyChanged("Direccions");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Pedido", Storage="_Pedidos", ThisKey="SS", OtherKey="IDCliente")]
		public EntitySet<Pedido> Pedidos
		{
			get
			{
				return this._Pedidos;
			}
			set
			{
				this._Pedidos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pedido_Cliente", Storage="_Pedido", ThisKey="SS", OtherKey="IDCliente", IsForeignKey=true)]
		public Pedido Pedido
		{
			get
			{
				return this._Pedido.Entity;
			}
			set
			{
				Pedido previousValue = this._Pedido.Entity;
				if (((previousValue != value) 
							|| (this._Pedido.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pedido.Entity = null;
						previousValue.Clientes = null;
					}
					this._Pedido.Entity = value;
					if ((value != null))
					{
						value.Clientes = this;
						this._SS = value.IDCliente;
					}
					else
					{
						this._SS = default(long);
					}
					this.SendPropertyChanged("Pedido");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pedidos(Pedido entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Pedidos(Pedido entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Direcciones")]
	public partial class Direccion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Dueño;
		
		private string _Calle;
		
		private int _Numero;
		
		private string _Puerta;
		
		private int _Codigo_Postal;
		
		private string _Detalles;
		
		private System.Nullable<int> _Portal;
		
		private System.Nullable<int> _Piso;
		
		private int _ID;
		
		private EntityRef<Cliente> _Cliente;
		
		private EntityRef<Empresa> _Empresa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDueñoChanging(long value);
    partial void OnDueñoChanged();
    partial void OnCalleChanging(string value);
    partial void OnCalleChanged();
    partial void OnNumeroChanging(int value);
    partial void OnNumeroChanged();
    partial void OnPuertaChanging(string value);
    partial void OnPuertaChanged();
    partial void OnCodigo_PostalChanging(int value);
    partial void OnCodigo_PostalChanged();
    partial void OnDetallesChanging(string value);
    partial void OnDetallesChanged();
    partial void OnPortalChanging(System.Nullable<int> value);
    partial void OnPortalChanged();
    partial void OnPisoChanging(System.Nullable<int> value);
    partial void OnPisoChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    #endregion
		
		public Direccion()
		{
			this._Cliente = default(EntityRef<Cliente>);
			this._Empresa = default(EntityRef<Empresa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dueño", DbType="BigInt NOT NULL")]
		public long Dueño
		{
			get
			{
				return this._Dueño;
			}
			set
			{
				if ((this._Dueño != value))
				{
					if ((this._Cliente.HasLoadedOrAssignedValue || this._Empresa.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDueñoChanging(value);
					this.SendPropertyChanging();
					this._Dueño = value;
					this.SendPropertyChanged("Dueño");
					this.OnDueñoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Calle", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Calle
		{
			get
			{
				return this._Calle;
			}
			set
			{
				if ((this._Calle != value))
				{
					this.OnCalleChanging(value);
					this.SendPropertyChanging();
					this._Calle = value;
					this.SendPropertyChanged("Calle");
					this.OnCalleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero", DbType="Int NOT NULL")]
		public int Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Puerta", DbType="NChar(10)")]
		public string Puerta
		{
			get
			{
				return this._Puerta;
			}
			set
			{
				if ((this._Puerta != value))
				{
					this.OnPuertaChanging(value);
					this.SendPropertyChanging();
					this._Puerta = value;
					this.SendPropertyChanged("Puerta");
					this.OnPuertaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Codigo Postal]", Storage="_Codigo_Postal", DbType="Int NOT NULL")]
		public int Codigo_Postal
		{
			get
			{
				return this._Codigo_Postal;
			}
			set
			{
				if ((this._Codigo_Postal != value))
				{
					this.OnCodigo_PostalChanging(value);
					this.SendPropertyChanging();
					this._Codigo_Postal = value;
					this.SendPropertyChanged("Codigo_Postal");
					this.OnCodigo_PostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detalles", DbType="NVarChar(MAX)")]
		public string Detalles
		{
			get
			{
				return this._Detalles;
			}
			set
			{
				if ((this._Detalles != value))
				{
					this.OnDetallesChanging(value);
					this.SendPropertyChanging();
					this._Detalles = value;
					this.SendPropertyChanged("Detalles");
					this.OnDetallesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Portal", DbType="Int")]
		public System.Nullable<int> Portal
		{
			get
			{
				return this._Portal;
			}
			set
			{
				if ((this._Portal != value))
				{
					this.OnPortalChanging(value);
					this.SendPropertyChanging();
					this._Portal = value;
					this.SendPropertyChanged("Portal");
					this.OnPortalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Piso", DbType="Int")]
		public System.Nullable<int> Piso
		{
			get
			{
				return this._Piso;
			}
			set
			{
				if ((this._Piso != value))
				{
					this.OnPisoChanging(value);
					this.SendPropertyChanging();
					this._Piso = value;
					this.SendPropertyChanged("Piso");
					this.OnPisoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Direccion", Storage="_Cliente", ThisKey="Dueño", OtherKey="SS", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Direccions = null;
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Direccions = this;
						this._Dueño = value.SS;
					}
					else
					{
						this._Dueño = default(long);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresa_Direccion", Storage="_Empresa", ThisKey="Dueño", OtherKey="IDEmpresa", IsForeignKey=true)]
		public Empresa Empresa
		{
			get
			{
				return this._Empresa.Entity;
			}
			set
			{
				Empresa previousValue = this._Empresa.Entity;
				if (((previousValue != value) 
							|| (this._Empresa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empresa.Entity = null;
						previousValue.Direccions = null;
					}
					this._Empresa.Entity = value;
					if ((value != null))
					{
						value.Direccions = this;
						this._Dueño = value.IDEmpresa;
					}
					else
					{
						this._Dueño = default(long);
					}
					this.SendPropertyChanged("Empresa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Empresas")]
	public partial class Empresa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IDEmpresa;
		
		private string _Nombre;
		
		private string _Subcategoria;
		
		private int _Telefono;
		
		private string _Email;
		
		private string _Descripcion;
		
		private int _Valoracion;
		
		private string _Categoria;
		
		private int _ID;
		
		private EntityRef<Direccion> _Direccions;
		
		private EntitySet<Pedido> _Pedidos;
		
		private EntitySet<Item> _Items;
		
		private EntityRef<Pedido> _Pedido;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDEmpresaChanging(long value);
    partial void OnIDEmpresaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnSubcategoriaChanging(string value);
    partial void OnSubcategoriaChanged();
    partial void OnTelefonoChanging(int value);
    partial void OnTelefonoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnValoracionChanging(int value);
    partial void OnValoracionChanged();
    partial void OnCategoriaChanging(string value);
    partial void OnCategoriaChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    #endregion
		
		public Empresa()
		{
			this._Direccions = default(EntityRef<Direccion>);
			this._Pedidos = new EntitySet<Pedido>(new Action<Pedido>(this.attach_Pedidos), new Action<Pedido>(this.detach_Pedidos));
			this._Items = new EntitySet<Item>(new Action<Item>(this.attach_Items), new Action<Item>(this.detach_Items));
			this._Pedido = default(EntityRef<Pedido>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEmpresa", DbType="BigInt NOT NULL")]
		public long IDEmpresa
		{
			get
			{
				return this._IDEmpresa;
			}
			set
			{
				if ((this._IDEmpresa != value))
				{
					if (this._Pedido.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDEmpresaChanging(value);
					this.SendPropertyChanging();
					this._IDEmpresa = value;
					this.SendPropertyChanged("IDEmpresa");
					this.OnIDEmpresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subcategoria", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Subcategoria
		{
			get
			{
				return this._Subcategoria;
			}
			set
			{
				if ((this._Subcategoria != value))
				{
					this.OnSubcategoriaChanging(value);
					this.SendPropertyChanging();
					this._Subcategoria = value;
					this.SendPropertyChanged("Subcategoria");
					this.OnSubcategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="Int NOT NULL")]
		public int Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valoracion", DbType="Int NOT NULL")]
		public int Valoracion
		{
			get
			{
				return this._Valoracion;
			}
			set
			{
				if ((this._Valoracion != value))
				{
					this.OnValoracionChanging(value);
					this.SendPropertyChanging();
					this._Valoracion = value;
					this.SendPropertyChanged("Valoracion");
					this.OnValoracionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categoria", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Categoria
		{
			get
			{
				return this._Categoria;
			}
			set
			{
				if ((this._Categoria != value))
				{
					this.OnCategoriaChanging(value);
					this.SendPropertyChanging();
					this._Categoria = value;
					this.SendPropertyChanged("Categoria");
					this.OnCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresa_Direccion", Storage="_Direccions", ThisKey="IDEmpresa", OtherKey="Dueño", IsUnique=true, IsForeignKey=false)]
		public Direccion Direccions
		{
			get
			{
				return this._Direccions.Entity;
			}
			set
			{
				Direccion previousValue = this._Direccions.Entity;
				if (((previousValue != value) 
							|| (this._Direccions.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Direccions.Entity = null;
						previousValue.Empresa = null;
					}
					this._Direccions.Entity = value;
					if ((value != null))
					{
						value.Empresa = this;
					}
					this.SendPropertyChanged("Direccions");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresa_Pedido", Storage="_Pedidos", ThisKey="IDEmpresa", OtherKey="IDEmpresa")]
		public EntitySet<Pedido> Pedidos
		{
			get
			{
				return this._Pedidos;
			}
			set
			{
				this._Pedidos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresa_Item", Storage="_Items", ThisKey="IDEmpresa", OtherKey="IDEmpresa")]
		public EntitySet<Item> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				this._Items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pedido_Empresa", Storage="_Pedido", ThisKey="IDEmpresa", OtherKey="IDEmpresa", IsForeignKey=true)]
		public Pedido Pedido
		{
			get
			{
				return this._Pedido.Entity;
			}
			set
			{
				Pedido previousValue = this._Pedido.Entity;
				if (((previousValue != value) 
							|| (this._Pedido.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pedido.Entity = null;
						previousValue.Empresas = null;
					}
					this._Pedido.Entity = value;
					if ((value != null))
					{
						value.Empresas = this;
						this._IDEmpresa = value.IDEmpresa;
					}
					else
					{
						this._IDEmpresa = default(long);
					}
					this.SendPropertyChanged("Pedido");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pedidos(Pedido entity)
		{
			this.SendPropertyChanging();
			entity.Empresa = this;
		}
		
		private void detach_Pedidos(Pedido entity)
		{
			this.SendPropertyChanging();
			entity.Empresa = null;
		}
		
		private void attach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Empresa = this;
		}
		
		private void detach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Empresa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pedidos")]
	public partial class Pedido : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPedido;
		
		private long _IDEmpresa;
		
		private int _IDItem;
		
		private long _IDCliente;
		
		private string _Hora;
		
		private int _Estado;
		
		private bool _Oculto;
		
		private EntityRef<Cliente> _Clientes;
		
		private EntityRef<Empresa> _Empresas;
		
		private EntityRef<Item> _Items;
		
		private EntityRef<Cliente> _Cliente;
		
		private EntityRef<Empresa> _Empresa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPedidoChanging(int value);
    partial void OnIDPedidoChanged();
    partial void OnIDEmpresaChanging(long value);
    partial void OnIDEmpresaChanged();
    partial void OnIDItemChanging(int value);
    partial void OnIDItemChanged();
    partial void OnIDClienteChanging(long value);
    partial void OnIDClienteChanged();
    partial void OnHoraChanging(string value);
    partial void OnHoraChanged();
    partial void OnEstadoChanging(int value);
    partial void OnEstadoChanged();
    partial void OnOcultoChanging(bool value);
    partial void OnOcultoChanged();
    #endregion
		
		public Pedido()
		{
			this._Clientes = default(EntityRef<Cliente>);
			this._Empresas = default(EntityRef<Empresa>);
			this._Items = default(EntityRef<Item>);
			this._Cliente = default(EntityRef<Cliente>);
			this._Empresa = default(EntityRef<Empresa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPedido", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPedido
		{
			get
			{
				return this._IDPedido;
			}
			set
			{
				if ((this._IDPedido != value))
				{
					this.OnIDPedidoChanging(value);
					this.SendPropertyChanging();
					this._IDPedido = value;
					this.SendPropertyChanged("IDPedido");
					this.OnIDPedidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEmpresa", DbType="BigInt NOT NULL")]
		public long IDEmpresa
		{
			get
			{
				return this._IDEmpresa;
			}
			set
			{
				if ((this._IDEmpresa != value))
				{
					if (this._Empresa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDEmpresaChanging(value);
					this.SendPropertyChanging();
					this._IDEmpresa = value;
					this.SendPropertyChanged("IDEmpresa");
					this.OnIDEmpresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDItem", DbType="Int NOT NULL")]
		public int IDItem
		{
			get
			{
				return this._IDItem;
			}
			set
			{
				if ((this._IDItem != value))
				{
					this.OnIDItemChanging(value);
					this.SendPropertyChanging();
					this._IDItem = value;
					this.SendPropertyChanged("IDItem");
					this.OnIDItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCliente", DbType="BigInt NOT NULL")]
		public long IDCliente
		{
			get
			{
				return this._IDCliente;
			}
			set
			{
				if ((this._IDCliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDClienteChanging(value);
					this.SendPropertyChanging();
					this._IDCliente = value;
					this.SendPropertyChanged("IDCliente");
					this.OnIDClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hora", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Hora
		{
			get
			{
				return this._Hora;
			}
			set
			{
				if ((this._Hora != value))
				{
					this.OnHoraChanging(value);
					this.SendPropertyChanging();
					this._Hora = value;
					this.SendPropertyChanged("Hora");
					this.OnHoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="Int NOT NULL")]
		public int Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oculto", DbType="Bit NOT NULL")]
		public bool Oculto
		{
			get
			{
				return this._Oculto;
			}
			set
			{
				if ((this._Oculto != value))
				{
					this.OnOcultoChanging(value);
					this.SendPropertyChanging();
					this._Oculto = value;
					this.SendPropertyChanged("Oculto");
					this.OnOcultoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pedido_Cliente", Storage="_Clientes", ThisKey="IDCliente", OtherKey="SS", IsUnique=true, IsForeignKey=false)]
		public Cliente Clientes
		{
			get
			{
				return this._Clientes.Entity;
			}
			set
			{
				Cliente previousValue = this._Clientes.Entity;
				if (((previousValue != value) 
							|| (this._Clientes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clientes.Entity = null;
						previousValue.Pedido = null;
					}
					this._Clientes.Entity = value;
					if ((value != null))
					{
						value.Pedido = this;
					}
					this.SendPropertyChanged("Clientes");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pedido_Empresa", Storage="_Empresas", ThisKey="IDEmpresa", OtherKey="IDEmpresa", IsUnique=true, IsForeignKey=false)]
		public Empresa Empresas
		{
			get
			{
				return this._Empresas.Entity;
			}
			set
			{
				Empresa previousValue = this._Empresas.Entity;
				if (((previousValue != value) 
							|| (this._Empresas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empresas.Entity = null;
						previousValue.Pedido = null;
					}
					this._Empresas.Entity = value;
					if ((value != null))
					{
						value.Pedido = this;
					}
					this.SendPropertyChanged("Empresas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pedido_Item", Storage="_Items", ThisKey="IDItem", OtherKey="IDItem", IsUnique=true, IsForeignKey=false)]
		public Item Items
		{
			get
			{
				return this._Items.Entity;
			}
			set
			{
				Item previousValue = this._Items.Entity;
				if (((previousValue != value) 
							|| (this._Items.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Items.Entity = null;
						previousValue.Pedido = null;
					}
					this._Items.Entity = value;
					if ((value != null))
					{
						value.Pedido = this;
					}
					this.SendPropertyChanged("Items");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Pedido", Storage="_Cliente", ThisKey="IDCliente", OtherKey="SS", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Pedidos.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Pedidos.Add(this);
						this._IDCliente = value.SS;
					}
					else
					{
						this._IDCliente = default(long);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresa_Pedido", Storage="_Empresa", ThisKey="IDEmpresa", OtherKey="IDEmpresa", IsForeignKey=true)]
		public Empresa Empresa
		{
			get
			{
				return this._Empresa.Entity;
			}
			set
			{
				Empresa previousValue = this._Empresa.Entity;
				if (((previousValue != value) 
							|| (this._Empresa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empresa.Entity = null;
						previousValue.Pedidos.Remove(this);
					}
					this._Empresa.Entity = value;
					if ((value != null))
					{
						value.Pedidos.Add(this);
						this._IDEmpresa = value.IDEmpresa;
					}
					else
					{
						this._IDEmpresa = default(long);
					}
					this.SendPropertyChanged("Empresa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Items")]
	public partial class Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDItem;
		
		private string _Nombre;
		
		private double _Precio;
		
		private long _IDEmpresa;
		
		private EntityRef<Pedido> _Pedido;
		
		private EntityRef<Empresa> _Empresa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDItemChanging(int value);
    partial void OnIDItemChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnPrecioChanging(double value);
    partial void OnPrecioChanged();
    partial void OnIDEmpresaChanging(long value);
    partial void OnIDEmpresaChanged();
    #endregion
		
		public Item()
		{
			this._Pedido = default(EntityRef<Pedido>);
			this._Empresa = default(EntityRef<Empresa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDItem", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDItem
		{
			get
			{
				return this._IDItem;
			}
			set
			{
				if ((this._IDItem != value))
				{
					if (this._Pedido.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDItemChanging(value);
					this.SendPropertyChanging();
					this._IDItem = value;
					this.SendPropertyChanged("IDItem");
					this.OnIDItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="Float NOT NULL")]
		public double Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEmpresa", DbType="BigInt NOT NULL")]
		public long IDEmpresa
		{
			get
			{
				return this._IDEmpresa;
			}
			set
			{
				if ((this._IDEmpresa != value))
				{
					if (this._Empresa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDEmpresaChanging(value);
					this.SendPropertyChanging();
					this._IDEmpresa = value;
					this.SendPropertyChanged("IDEmpresa");
					this.OnIDEmpresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pedido_Item", Storage="_Pedido", ThisKey="IDItem", OtherKey="IDItem", IsForeignKey=true)]
		public Pedido Pedido
		{
			get
			{
				return this._Pedido.Entity;
			}
			set
			{
				Pedido previousValue = this._Pedido.Entity;
				if (((previousValue != value) 
							|| (this._Pedido.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pedido.Entity = null;
						previousValue.Items = null;
					}
					this._Pedido.Entity = value;
					if ((value != null))
					{
						value.Items = this;
						this._IDItem = value.IDItem;
					}
					else
					{
						this._IDItem = default(int);
					}
					this.SendPropertyChanged("Pedido");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresa_Item", Storage="_Empresa", ThisKey="IDEmpresa", OtherKey="IDEmpresa", IsForeignKey=true)]
		public Empresa Empresa
		{
			get
			{
				return this._Empresa.Entity;
			}
			set
			{
				Empresa previousValue = this._Empresa.Entity;
				if (((previousValue != value) 
							|| (this._Empresa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empresa.Entity = null;
						previousValue.Items.Remove(this);
					}
					this._Empresa.Entity = value;
					if ((value != null))
					{
						value.Items.Add(this);
						this._IDEmpresa = value.IDEmpresa;
					}
					else
					{
						this._IDEmpresa = default(long);
					}
					this.SendPropertyChanged("Empresa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
