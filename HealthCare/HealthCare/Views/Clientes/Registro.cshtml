@model HealthCare.Models.Cliente
@using HealthCare.Models 

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.Hidden("modificar", "si");
    @Html.AntiForgeryToken()

    <div class="form-horizontal form" style="padding: 5% 10%">
        <h2>@(Session["cliente"] == null ? "Registro" : "Modificar Cuenta")</h2>
        <br />
        <h4>Cliente</h4>
        <label style="color:darkred">Los campos <u>subrayados</u> son obligatorios</label>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.SS, "Nº Seguridad Social", htmlAttributes: new { @class = "control-label col-md-2 req"})
            <div class="col-md-10">
                @if (Session["cliente"] == null)
                {
                    @Html.EditorFor(model => model.SS, new { htmlAttributes = new { @class = "form-control", @id = "ss", @maxlength="12"} });
                    <label hidden="hidden" class="mierror"></label>
                }
                else
                {
                    @Html.EditorFor(model => model.SS, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } });
                    @Html.HiddenFor(model => model.SS);
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2 req" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", @id = "nombre" } })
                <label hidden="hidden" class="mierror"></label>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Apellidos, htmlAttributes: new { @class = "control-label col-md-2 req" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Apellidos, new { htmlAttributes = new { @class = "form-control", @id = "apellidos" } })
                <label hidden="hidden" class="mierror"></label>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label col-md-2 req" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control", @id = "telefono" } })
                <label hidden="hidden" class="mierror"></label>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Edad, htmlAttributes: new { @class = "control-label col-md-2 req" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Edad, new { htmlAttributes = new { @class = "form-control", @id = "edad" } })
                <label hidden="hidden" class="mierror"></label>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2 req" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @id = "email" } })
                <label hidden="hidden" class="mierror"></label>
            </div>
        </div>        
        
        @Html.EditorFor(model => model.Direccions, "Direccion")        

        <div class="form-group">
            <div class="col-md-10">
                <input type="submit" value="@(Session["cliente"] == null ? "Registrarse" : "Modificar")" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<script>
    $("#ss").focusout((ev) => {
        if (ev.target.value != "") {
            $.ajax({
                url: "/Datos/existe",
                type: "POST",
                contentType: "application/json; charset=utf-8",
                datatype: 'json',
                data: JSON.stringify({ "ss": ev.target.value })
            }).done((data) => {
                var json = JSON.parse(data);
                if (json.valido == 0) {
                    $("#ss").siblings("label").attr("hidden", null).text(json.mensaje);
                }
            });
        }
    })
</script>